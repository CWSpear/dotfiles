#
# A simple theme that displays relevant, contextual information.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#
# Screenshots:
#   http://i.imgur.com/nrGV6pg.png
#

# Load dependencies.
pmodload 'helper'

function prompt_sorin_pwd {
  local pwd="$PWD"
  pwd="${pwd/#\/Users\/cameron\/Projects\/under-armour/#/ua}"
  pwd="${pwd/#\/Users\/cameron\/Projects\/surge/#/surge}"
  pwd="${pwd/#\/Users\/cameron\/Projects\/github/#/github}"

  pwd="${pwd/#$HOME/~}"

  _prompt_sorin_pwd=$pwd
  # uncomment below and delete above for abbrev dir
  # if [[ "$pwd" == (#m)[/~] ]]; then
  #   _prompt_sorin_pwd="$MATCH"
  #   unset MATCH
  # else
  #   _prompt_sorin_pwd="${${${${(@j:/:M)${(@s:/:)pwd}##.#?}:h}%/}//\%/%%}/${${pwd:t}//\%/%%}"
  # fi
}

function prompt_sorin_git_info {
  if (( _prompt_sorin_precmd_async_pid > 0 )); then
    # Append Git status.
    if [[ -s "$_prompt_sorin_precmd_async_data" ]]; then
      alias typeset='typeset -g'
      source "$_prompt_sorin_precmd_async_data"
      RPROMPT+='${git_info:+${(e)git_info[status]}}'
      unalias typeset
    fi

    # Reset PID.
    _prompt_sorin_precmd_async_pid=0

    # Redisplay prompt.
    zle && zle reset-prompt
  fi
}

function prompt_sorin_precmd_async {
  # Get Git repository information.
  if (( $+functions[git-info] )); then
    git-info
    typeset -p git_info >! "$_prompt_sorin_precmd_async_data"
  fi

  # Signal completion to parent process.
  kill -WINCH $$
}

function prompt_sorin_precmd {
  printf "\n"
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS

  # set Docker Machine if env exists
  display_docker_machine

  # display node version in the prompt
  display_node_version

  # Format PWD.
  prompt_sorin_pwd

  # Define prompts.
  RPROMPT='${editor_info[overwrite]}%(?:: %F{1}‚èé%f)${VIM:+" %B%F{6}V%f%b"}'

  # Kill the old process of slow commands if it is still running.
  if (( _prompt_sorin_precmd_async_pid > 0 )); then
    kill -KILL "$_prompt_sorin_precmd_async_pid" &>/dev/null
  fi

  # Compute slow commands in the background.
  trap prompt_sorin_git_info WINCH
  prompt_sorin_precmd_async &!
  _prompt_sorin_precmd_async_pid=$!
}

function display_docker_machine {
  if [[ $DOCKER_MACHINE_NAME && $DOCKER_MACHINE_NAME != 'goomba' ]]; then
    zstyle -s ':prezto:module:docker:info:machine' format 'docker_machine_format'
    zformat -f docker_machine_format "$docker_machine_format" "m:$DOCKER_MACHINE_NAME"
  fi
}

function display_node_version {
  zstyle -s ':prezto:module:node:info:version' format 'node_version'
  local version=`node --version`
  zformat -f node_version "$node_version" "m:$version"
}

function prompt_sorinalt_setup {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS
  prompt_opts=(cr percent subst)
  _prompt_sorin_precmd_async_pid=0
  _prompt_sorin_precmd_async_data="${TMPPREFIX}-prompt_sorin_data"

  # Load required functions.
  autoload -Uz add-zsh-hook

  # Add hook for calling git-info before each command.
  add-zsh-hook precmd prompt_sorin_precmd

  # Set editor-info parameters.
  zstyle ':prezto:module:editor:info:completing' format '%B%F{yellow}...%f%b'
  zstyle ':prezto:module:editor:info:keymap:primary' format '%B%F{red}‚ùØ%F{yellow}‚ùØ%F{green}‚ùØ%f%b'
  zstyle ':prezto:module:editor:info:keymap:primary:overwrite' format ' %F{red}‚ô∫%f'
  zstyle ':prezto:module:editor:info:keymap:alternate' format ' %B%F{green}‚ùÆ%F{yellow}‚ùÆ%F{red}‚ùÆ%f%b'

  # Set git-info parameters.
  zstyle ':prezto:module:git:info' verbose 'yes'
  zstyle ':prezto:module:git:info:action' format ':%%B%F{yellow}%s%f%%b'
  zstyle ':prezto:module:git:info:added' format ' %%B%F{green}‚úö%f%%b'
  zstyle ':prezto:module:git:info:ahead' format ' %%B%F{yellow}‚¨Ü%f%%b'
  zstyle ':prezto:module:git:info:behind' format ' %%B%F{yellow}‚¨á%f%%b'
  zstyle ':prezto:module:git:info:branch' format '%F{magenta}[%f%F{green}%b%f%F{magenta}]%f'
  zstyle ':prezto:module:git:info:commit' format ':%F{green}%.7c%f'
  zstyle ':prezto:module:git:info:deleted' format ' %%B%F{red}‚úñ%f%%b'
  zstyle ':prezto:module:git:info:modified' format ' %%B%F{blue}‚ú±%f%%b'
  zstyle ':prezto:module:git:info:position' format ':%F{red}%p%f'
  zstyle ':prezto:module:git:info:renamed' format ' %%B%F{magenta}‚ûú%f%%b'
  zstyle ':prezto:module:git:info:stashed' format ' %%B%F{cyan}‚ú≠%f%%b'
  zstyle ':prezto:module:git:info:unmerged' format ' %%B%F{yellow}‚ïê%f%%b'
  zstyle ':prezto:module:git:info:untracked' format ' %%B%F{white}‚óº%f%%b'
  zstyle ':prezto:module:git:info:keys' format \
    'prompt' ' $(coalesce "%b" "%p" "%c")%s' \
    'status' '%A%B%S%a%d%m%r%U%u'

  zstyle ':prezto:module:docker:info' verbose 'yes'
  zstyle ':prezto:module:docker:info:machine' format ' %F{red}[%f%F{blue}%m%f%F{red}]%f'

  zstyle ':prezto:module:node:info' verbose 'yes'
  zstyle ':prezto:module:node:info:version' format ' %F{yellow}[%f%F{cyan}%m%f%F{yellow}]%f'

  # environment aware symbol
  _echo_symbol="%F{white}Ô£ø%f"
  if [ $ZSH_PROMPT_SYMBOL ]; then
    _echo_symbol=$ZSH_PROMPT_SYMBOL
  elif [ $SSH_TTY ]; then
    _echo_symbol="%F{yellow}‚òÖ%f %F{cyan}[%f%F{blue}%n%f%F{cyan}@%f%F{yellow}%m%f%F{cyan}]%f"
  elif [ $ZSH_DOCKER_DEV ]; then
    _echo_symbol="üê≥ "
  fi

  # Define prompts.
  PROMPT='${_echo_symbol} %F{white}${_prompt_sorin_pwd}%f${docker_machine_format}${node_version}${git_info:+${(e)git_info[prompt]}}%(!. %B%F{red}#%f%b.)'$'\n''${editor_info[keymap]} '
  RPROMPT=''
  SPROMPT='zsh: correct %F{red}%R%f to %F{green}%r%f [Nyae]? '

  function prompt_sorinalt_preview {
    local +h PROMPT=''
    local +h RPROMPT=''
    local +h SPROMPT=''

    editor-info 2>/dev/null
    prompt_preview_theme 'sorinalt'
  }
}

prompt_sorinalt_setup "$@"


function zsh-git-statuses-key {
    black='\033[0;30m'        # Black
    red='\033[0;31m'          # Red
    green='\033[0;32m'        # Green
    yellow='\033[0;33m'       # Yellow
    blue='\033[0;34m'         # Blue
    purple='\033[0;35m'       # Purple
    cyan='\033[0;36m'         # Cyan
    white='\033[0;37m'        # White
    nocolor='\033[0m'         # No Color

    echo ${green}‚úö${nocolor} added
    echo ${yellow}‚¨Ü${nocolor} ahead
    echo ${yellow}‚¨á${nocolor} behind
    echo ${red}‚úñ${nocolor} deleted
    echo ${blue}‚ú±${nocolor} modified
    echo ${magenta}‚ûú${nocolor} renamed
    echo ${cyan}‚ú≠${nocolor} stashed
    echo ${yellow}‚ïê${nocolor} unmerged
    echo ${white}‚óº${nocolor} untracked
}
